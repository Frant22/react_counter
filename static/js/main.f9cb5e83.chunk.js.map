{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","number","addOne","add100","increase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACrB,oCACE,qCAEGH,GAEH,4BACEI,KAAK,SACLC,QAASJ,GAFX,SAOA,4BACEG,KAAK,SACLC,QAASH,GAFX,WAOA,4BACEE,KAAK,SACLC,QAASF,GAFX,eCqBWG,E,4MAvCbC,MAAQ,CACNP,OAAQ,G,EAGVC,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BT,OAAQS,EAAUT,OAAS,O,EAI/BE,OAAS,WACP,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAC1BT,OAAQS,EAAUT,OAAS,S,EAI/BG,SAAW,WACL,EAAKI,MAAMP,OAAS,IAAM,GAC5B,EAAKE,SAGP,EAAKD,U,4CAGP,WAAU,IACAD,EAAWU,KAAKH,MAAhBP,OAER,OACE,kBAAC,EAAD,CACEA,OAAQA,EACRC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GAjCLQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f9cb5e83.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ number, addOne, add100, increase }) => (\n  <>\n    <h1>\n      Count:\n      {number}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add 1\n    </button>\n\n    <button\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n\n    <button\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  number: PropTypes.number.isRequired,\n  add100: PropTypes.func.isRequired,\n  addOne: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    number: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      number: prevState.number + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      number: prevState.number + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.number % 5 === 0) {\n      this.add100();\n    }\n    \n    this.addOne();\n  };\n\n  render() {\n    const { number } = this.state;\n\n    return (\n      <Counter\n        number={number}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}